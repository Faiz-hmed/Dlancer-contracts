{
  "address": "0x833EDbC035ff50F2bBfa1285C21b89CbC8aD37b7",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_employee",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_reward",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_deadline",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_taskDescription",
          "type": "string"
        }
      ],
      "stateMutability": "payable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_reward",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_criteria",
          "type": "string"
        }
      ],
      "name": "activateTask",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cancelTask",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cancelled",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_work",
          "type": "string"
        }
      ],
      "name": "completeTask",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "completed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "criteria",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "dao",
      "outputs": [
        {
          "internalType": "contract DAO",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "deadline",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "employee",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "employer",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getCriteria",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getWork",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "proposalId",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "reward",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_daoAddress",
          "type": "address"
        }
      ],
      "name": "setDAO",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "taskDescription",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "verifyTask",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "_supportsProposal",
          "type": "bool"
        }
      ],
      "name": "voteOnCompletion",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "work",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0x1942d6bdfd6b7b53a27877b4909eafec0e646b96d136eda5fdfd9f3a645ff273",
  "receipt": {
    "to": null,
    "from": "0xA068eB4B3f642b8C56680807499d92e87A935079",
    "contractAddress": "0x833EDbC035ff50F2bBfa1285C21b89CbC8aD37b7",
    "transactionIndex": 0,
    "gasUsed": "2136902",
    "logsBloom": "0x
    "blockHash": "0x49d80f1700d9ce6deba3fc5fbe3bc813eff226821d74774d2f472603d94ffb46",
    "transactionHash": "0x1942d6bdfd6b7b53a27877b4909eafec0e646b96d136eda5fdfd9f3a645ff273",
    "logs": [
      {
        "transactionIndex": 0,
        "blockNumber": 1,
        "transactionHash": "0x1942d6bdfd6b7b53a27877b4909eafec0e646b96d136eda5fdfd9f3a645ff273",
        "address": "0x833EDbC035ff50F2bBfa1285C21b89CbC8aD37b7",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000a068eb4b3f642b8c56680807499d92e87a935079"
        ],
        "data": "0x",
        "logIndex": 0,
        "blockHash": "0x49d80f1700d9ce6deba3fc5fbe3bc813eff226821d74774d2f472603d94ffb46"
      }
    ],
    "blockNumber": 1,
    "cumulativeGasUsed": "2136902",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x1CBd3b2770909D4e10f157cABC84C7264073C9Ec",
    "1000000000000000000",
    1680767210,
    "Example task description"
  ],
  "numDeployments": 1,
  "solcInputHash": "8e74880fe1d12af79047fe2253853b1a",
  "metadata": "{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_employee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_reward\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_deadline\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_taskDescription\",\"type\":\"string\"}],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_reward\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_criteria\",\"type\":\"string\"}],\"name\":\"activateTask\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cancelTask\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cancelled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_work\",\"type\":\"string\"}],\"name\":\"completeTask\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"completed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"criteria\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"dao\",\"outputs\":[{\"internalType\":\"contract DAO\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deadline\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"employee\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"employer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCriteria\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getWork\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proposalId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"reward\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_daoAddress\",\"type\":\"address\"}],\"name\":\"setDAO\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"taskDescription\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"verifyTask\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_supportsProposal\",\"type\":\"bool\"}],\"name\":\"voteOnCompletion\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"work\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/dao.sol\":\"WorkValidation\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.0 (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xa1b27b3f44ff825974e5268e8f63ad3b03add5b464880d860fbb8cae043e17f7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.0 (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address sender,\\n        address recipient,\\n        uint256 amount\\n    ) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0xc1452b054778f1926419196ef12ae200758a4ee728df69ae1cd13e5c16ca7df7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.0 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0x7736c187e6f1358c1ea9350a2a21aa8528dec1c2f43b374a9067465a3a51f5d3\",\"license\":\"MIT\"},\"contracts/dao.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.8;\\n\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\n\\nabstract contract DAO {\\n    function nativeToken() virtual public view returns (address);\\n    function newProposal(\\n        bytes memory _proposalData,\\n        string memory _description,\\n        address _recipient,\\n        IERC20 _token\\n    ) virtual public returns (uint256);\\n    function vote(uint256 _proposalId, bool _supportsProposal) virtual public;\\n    function executeProposal(uint256 _proposalId) virtual public;\\n}\\n\\ncontract WorkValidation is Ownable {\\n    address public employer;\\n    address public employee;\\n    uint256 public reward;\\n    uint256 public deadline;\\n    string public taskDescription;\\n    bool public completed;\\n    bool public cancelled;\\n    string public work;\\n    string public criteria;\\n    DAO public dao;\\n    uint256 public proposalId;\\n\\n    constructor(address _employee, uint256 _reward, uint256 _deadline, string memory _taskDescription) payable {\\n        employer = msg.sender;\\n        employee = _employee;\\n        reward = _reward;\\n        deadline = _deadline;\\n        taskDescription = _taskDescription;\\n        completed = false;\\n        cancelled = false;\\n    }\\n\\n    function transferOwnership(address newOwner) public override onlyOwner {\\n        super.transferOwnership(newOwner);\\n    }\\n    function setDAO(address _daoAddress) public onlyOwner {\\n        dao = DAO(_daoAddress);\\n    }\\n\\n    function activateTask(uint256 _reward, string memory _criteria) public payable {\\n        reward = _reward;\\n        criteria = _criteria;\\n        require(msg.value == _reward, \\\"Amount sent must be equal to the reward\\\");\\n    }\\n\\n    function completeTask(string memory _work) public {\\n        require(msg.sender == employee, \\\"Only the employee can complete the task\\\");\\n        require(block.timestamp <= deadline, \\\"Deadline has passed\\\");\\n        require(!cancelled, \\\"Task has been cancelled\\\");\\n        require(bytes(work).length == 0, \\\"Task is already marked as completed\\\");\\n\\n        work = _work;\\n        bytes memory data = abi.encodeWithSignature(\\\"verifyTask()\\\");\\n        string memory description = \\\"Verify task completion\\\";\\n        IERC20 token = IERC20(dao.nativeToken());\\n        address recipient = address(this);\\n        proposalId = dao.newProposal(data, description, recipient, token);\\n    }\\n\\n    function verifyTask() public {\\n        require(msg.sender == address(dao), \\\"Only the DAO can verify the task\\\");\\n        require(bytes(work).length > 0, \\\"No work has been submitted yet\\\");\\n\\n        // perform task verification\\n        bool isVerified = true;\\n\\n        if (isVerified) {\\n            completed = true;\\n            dao.vote(proposalId, true);\\n            dao.executeProposal(proposalId);\\n            payable(employee).transfer(reward);\\n        } else {\\n            dao.vote(proposalId, false);\\n        }\\n    }\\n\\n    function cancelTask() public {\\n        require(msg.sender == employee, \\\"Only the employee can cancel the task\\\");\\n        require(!completed, \\\"Task has already been completed\\\");\\n\\n        cancelled = true;\\n        payable(employer).transfer(reward);\\n    }\\n\\n    function getWork() public view returns (string memory) {\\n        return work;\\n    }\\n\\n    function getCriteria() public view returns (string memory) {\\n        return criteria;\\n    }\\n\\n    function voteOnCompletion(bool _supportsProposal) public {\\n        require(dao != DAO(address(0)), \\\"DAO has not been set\\\");\\n        dao.vote(proposalId, _supportsProposal);\\n    }\\n}\",\"keccak256\":\"0x57a001b2f464f420244ed564a3e7100e4ac4b0f9143cbd453db8afc404149e32\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x6080604052604051620028dc380380620028dc8339818101604052810190620000299190620004eb565b620000496200003d6200013260201b60201c565b6200013a60201b60201c565b33600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555083600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555082600381905550816004819055508060059080519060200190620000f1929190620001fe565b506000600660006101000a81548160ff0219169083151502179055506000600660016101000a81548160ff02191690831515021790555050505050620005e1565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b8280546200020c90620005ab565b90600052602060002090601f0160209004810192826200023057600085556200027c565b82601f106200024b57805160ff19168380011785556200027c565b828001600101855582156200027c579182015b828111156200027b5782518255916020019190600101906200025e565b5b5090506200028b91906200028f565b5090565b5b80821115620002aa57600081600090555060010162000290565b5090565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620002ef82620002c2565b9050919050565b6200030181620002e2565b81146200030d57600080fd5b50565b6000815190506200032181620002f6565b92915050565b6000819050919050565b6200033c8162000327565b81146200034857600080fd5b50565b6000815190506200035c8162000331565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b620003b7826200036c565b810181811067ffffffffffffffff82111715620003d957620003d86200037d565b5b80604052505050565b6000620003ee620002ae565b9050620003fc8282620003ac565b919050565b600067ffffffffffffffff8211156200041f576200041e6200037d565b5b6200042a826200036c565b9050602081019050919050565b60005b83811015620004575780820151818401526020810190506200043a565b8381111562000467576000848401525b50505050565b6000620004846200047e8462000401565b620003e2565b905082815260208101848484011115620004a357620004a262000367565b5b620004b084828562000437565b509392505050565b600082601f830112620004d057620004cf62000362565b5b8151620004e28482602086016200046d565b91505092915050565b60008060008060808587031215620005085762000507620002b8565b5b6000620005188782880162000310565b94505060206200052b878288016200034b565b93505060406200053e878288016200034b565b925050606085015167ffffffffffffffff811115620005625762000561620002bd565b5b6200057087828801620004b8565b91505092959194509250565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680620005c457607f821691505b60208210811415620005db57620005da6200057c565b5b50919050565b6122eb80620005f16000396000f3fe6080604052600436106101355760003560e01c80638da5cb5b116100ab578063b0afb95b1161006f578063b0afb95b146103be578063e27fbd27146103e9578063e73a914c14610405578063f2fde38b1461042e578063f7d9ae7314610457578063fbc03a1e1461046e57610135565b80638da5cb5b146102e75780639a82a09a146103125780639d9a7fe91461033d578063a0a1a7d714610368578063ae200e791461039357610135565b806338e40486116100fd57806338e4048614610211578063394c244b1461023a5780634162169f146102635780635472dbdc1461028e5780635c43ccaf146102a5578063715018a6146102d057610135565b80631c26d5cb1461013a578063228cb7331461016557806329dcb0cf146101905780632dfca445146101bb578063322e9f04146101e6575b600080fd5b34801561014657600080fd5b5061014f610499565b60405161015c91906116e2565b60405180910390f35b34801561017157600080fd5b5061017a61052b565b604051610187919061171d565b60405180910390f35b34801561019c57600080fd5b506101a5610531565b6040516101b2919061171d565b60405180910390f35b3480156101c757600080fd5b506101d0610537565b6040516101dd919061171d565b60405180910390f35b3480156101f257600080fd5b506101fb61053d565b60405161020891906116e2565b60405180910390f35b34801561021d57600080fd5b5061023860048036038101906102339190611784565b6105cb565b005b34801561024657600080fd5b50610261600480360381019061025c91906118e6565b6106f1565b005b34801561026f57600080fd5b50610278610aa8565b60405161028591906119ae565b60405180910390f35b34801561029a57600080fd5b506102a3610ace565b005b3480156102b157600080fd5b506102ba610dfd565b6040516102c791906116e2565b60405180910390f35b3480156102dc57600080fd5b506102e5610e8f565b005b3480156102f357600080fd5b506102fc610f17565b60405161030991906119ea565b60405180910390f35b34801561031e57600080fd5b50610327610f40565b6040516103349190611a14565b60405180910390f35b34801561034957600080fd5b50610352610f53565b60405161035f9190611a14565b60405180910390f35b34801561037457600080fd5b5061037d610f66565b60405161038a91906119ea565b60405180910390f35b34801561039f57600080fd5b506103a8610f8c565b6040516103b591906119ea565b60405180910390f35b3480156103ca57600080fd5b506103d3610fb2565b6040516103e091906116e2565b60405180910390f35b61040360048036038101906103fe9190611a5b565b611040565b005b34801561041157600080fd5b5061042c60048036038101906104279190611ae3565b6110a4565b005b34801561043a57600080fd5b5061045560048036038101906104509190611ae3565b611164565b005b34801561046357600080fd5b5061046c6111ec565b005b34801561047a57600080fd5b50610483611354565b60405161049091906116e2565b60405180910390f35b6060600780546104a890611b3f565b80601f01602080910402602001604051908101604052809291908181526020018280546104d490611b3f565b80156105215780601f106104f657610100808354040283529160200191610521565b820191906000526020600020905b81548152906001019060200180831161050457829003601f168201915b5050505050905090565b60035481565b60045481565b600a5481565b6007805461054a90611b3f565b80601f016020809104026020016040519081016040528092919081815260200182805461057690611b3f565b80156105c35780601f10610598576101008083540402835291602001916105c3565b820191906000526020600020905b8154815290600101906020018083116105a657829003601f168201915b505050505081565b600073ffffffffffffffffffffffffffffffffffffffff16600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141561065d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161065490611bbd565b60405180910390fd5b600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c9d27afe600a54836040518363ffffffff1660e01b81526004016106bc929190611bdd565b600060405180830381600087803b1580156106d657600080fd5b505af11580156106ea573d6000803e3d6000fd5b5050505050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610781576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161077890611c78565b60405180910390fd5b6004544211156107c6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107bd90611ce4565b60405180910390fd5b600660019054906101000a900460ff1615610816576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161080d90611d50565b60405180910390fd5b60006007805461082590611b3f565b905014610867576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161085e90611de2565b60405180910390fd5b806007908051906020019061087d9291906115a6565b5060006040516024016040516020818303038152906040527f5472dbdc000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050905060006040518060400160405280601681526020017f566572696679207461736b20636f6d706c6574696f6e0000000000000000000081525090506000600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663e1758bd86040518163ffffffff1660e01b815260040160206040518083038186803b1580156109a957600080fd5b505afa1580156109bd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109e19190611e17565b90506000309050600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166302063e82858584866040518563ffffffff1660e01b8152600401610a499493929190611eba565b602060405180830381600087803b158015610a6357600080fd5b505af1158015610a77573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a9b9190611f22565b600a819055505050505050565b600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610b5e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b5590611f9b565b60405180910390fd5b600060078054610b6d90611b3f565b905011610baf576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ba690612007565b60405180910390fd5b6000600190508015610d67576001600660006101000a81548160ff021916908315150217905550600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c9d27afe600a5460016040518363ffffffff1660e01b8152600401610c36929190611bdd565b600060405180830381600087803b158015610c5057600080fd5b505af1158015610c64573d6000803e3d6000fd5b50505050600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16630d61b519600a546040518263ffffffff1660e01b8152600401610cc5919061171d565b600060405180830381600087803b158015610cdf57600080fd5b505af1158015610cf3573d6000803e3d6000fd5b50505050600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc6003549081150290604051600060405180830381858888f19350505050158015610d61573d6000803e3d6000fd5b50610dfa565b600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c9d27afe600a5460006040518363ffffffff1660e01b8152600401610dc7929190611bdd565b600060405180830381600087803b158015610de157600080fd5b505af1158015610df5573d6000803e3d6000fd5b505050505b50565b606060088054610e0c90611b3f565b80601f0160208091040260200160405190810160405280929190818152602001828054610e3890611b3f565b8015610e855780601f10610e5a57610100808354040283529160200191610e85565b820191906000526020600020905b815481529060010190602001808311610e6857829003601f168201915b5050505050905090565b610e976113e2565b73ffffffffffffffffffffffffffffffffffffffff16610eb5610f17565b73ffffffffffffffffffffffffffffffffffffffff1614610f0b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f0290612073565b60405180910390fd5b610f1560006113ea565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600660019054906101000a900460ff1681565b600660009054906101000a900460ff1681565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60088054610fbf90611b3f565b80601f0160208091040260200160405190810160405280929190818152602001828054610feb90611b3f565b80156110385780601f1061100d57610100808354040283529160200191611038565b820191906000526020600020905b81548152906001019060200180831161101b57829003601f168201915b505050505081565b81600381905550806008908051906020019061105d9291906115a6565b508134146110a0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161109790612105565b60405180910390fd5b5050565b6110ac6113e2565b73ffffffffffffffffffffffffffffffffffffffff166110ca610f17565b73ffffffffffffffffffffffffffffffffffffffff1614611120576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161111790612073565b60405180910390fd5b80600960006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b61116c6113e2565b73ffffffffffffffffffffffffffffffffffffffff1661118a610f17565b73ffffffffffffffffffffffffffffffffffffffff16146111e0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111d790612073565b60405180910390fd5b6111e9816114ae565b50565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461127c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161127390612197565b60405180910390fd5b600660009054906101000a900460ff16156112cc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112c390612203565b60405180910390fd5b6001600660016101000a81548160ff021916908315150217905550600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc6003549081150290604051600060405180830381858888f19350505050158015611351573d6000803e3d6000fd5b50565b6005805461136190611b3f565b80601f016020809104026020016040519081016040528092919081815260200182805461138d90611b3f565b80156113da5780601f106113af576101008083540402835291602001916113da565b820191906000526020600020905b8154815290600101906020018083116113bd57829003601f168201915b505050505081565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6114b66113e2565b73ffffffffffffffffffffffffffffffffffffffff166114d4610f17565b73ffffffffffffffffffffffffffffffffffffffff161461152a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161152190612073565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561159a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161159190612295565b60405180910390fd5b6115a3816113ea565b50565b8280546115b290611b3f565b90600052602060002090601f0160209004810192826115d4576000855561161b565b82601f106115ed57805160ff191683800117855561161b565b8280016001018555821561161b579182015b8281111561161a5782518255916020019190600101906115ff565b5b509050611628919061162c565b5090565b5b8082111561164557600081600090555060010161162d565b5090565b600081519050919050565b600082825260208201905092915050565b60005b83811015611683578082015181840152602081019050611668565b83811115611692576000848401525b50505050565b6000601f19601f8301169050919050565b60006116b482611649565b6116be8185611654565b93506116ce818560208601611665565b6116d781611698565b840191505092915050565b600060208201905081810360008301526116fc81846116a9565b905092915050565b6000819050919050565b61171781611704565b82525050565b6000602082019050611732600083018461170e565b92915050565b6000604051905090565b600080fd5b600080fd5b60008115159050919050565b6117618161174c565b811461176c57600080fd5b50565b60008135905061177e81611758565b92915050565b60006020828403121561179a57611799611742565b5b60006117a88482850161176f565b91505092915050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6117f382611698565b810181811067ffffffffffffffff82111715611812576118116117bb565b5b80604052505050565b6000611825611738565b905061183182826117ea565b919050565b600067ffffffffffffffff821115611851576118506117bb565b5b61185a82611698565b9050602081019050919050565b82818337600083830152505050565b600061188961188484611836565b61181b565b9050828152602081018484840111156118a5576118a46117b6565b5b6118b0848285611867565b509392505050565b600082601f8301126118cd576118cc6117b1565b5b81356118dd848260208601611876565b91505092915050565b6000602082840312156118fc576118fb611742565b5b600082013567ffffffffffffffff81111561191a57611919611747565b5b611926848285016118b8565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600061197461196f61196a8461192f565b61194f565b61192f565b9050919050565b600061198682611959565b9050919050565b60006119988261197b565b9050919050565b6119a88161198d565b82525050565b60006020820190506119c3600083018461199f565b92915050565b60006119d48261192f565b9050919050565b6119e4816119c9565b82525050565b60006020820190506119ff60008301846119db565b92915050565b611a0e8161174c565b82525050565b6000602082019050611a296000830184611a05565b92915050565b611a3881611704565b8114611a4357600080fd5b50565b600081359050611a5581611a2f565b92915050565b60008060408385031215611a7257611a71611742565b5b6000611a8085828601611a46565b925050602083013567ffffffffffffffff811115611aa157611aa0611747565b5b611aad858286016118b8565b9150509250929050565b611ac0816119c9565b8114611acb57600080fd5b50565b600081359050611add81611ab7565b92915050565b600060208284031215611af957611af8611742565b5b6000611b0784828501611ace565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680611b5757607f821691505b60208210811415611b6b57611b6a611b10565b5b50919050565b7f44414f20686173206e6f74206265656e20736574000000000000000000000000600082015250565b6000611ba7601483611654565b9150611bb282611b71565b602082019050919050565b60006020820190508181036000830152611bd681611b9a565b9050919050565b6000604082019050611bf2600083018561170e565b611bff6020830184611a05565b9392505050565b7f4f6e6c792074686520656d706c6f7965652063616e20636f6d706c657465207460008201527f6865207461736b00000000000000000000000000000000000000000000000000602082015250565b6000611c62602783611654565b9150611c6d82611c06565b604082019050919050565b60006020820190508181036000830152611c9181611c55565b9050919050565b7f446561646c696e65206861732070617373656400000000000000000000000000600082015250565b6000611cce601383611654565b9150611cd982611c98565b602082019050919050565b60006020820190508181036000830152611cfd81611cc1565b9050919050565b7f5461736b20686173206265656e2063616e63656c6c6564000000000000000000600082015250565b6000611d3a601783611654565b9150611d4582611d04565b602082019050919050565b60006020820190508181036000830152611d6981611d2d565b9050919050565b7f5461736b20697320616c7265616479206d61726b656420617320636f6d706c6560008201527f7465640000000000000000000000000000000000000000000000000000000000602082015250565b6000611dcc602383611654565b9150611dd782611d70565b604082019050919050565b60006020820190508181036000830152611dfb81611dbf565b9050919050565b600081519050611e1181611ab7565b92915050565b600060208284031215611e2d57611e2c611742565b5b6000611e3b84828501611e02565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000611e6b82611e44565b611e758185611e4f565b9350611e85818560208601611665565b611e8e81611698565b840191505092915050565b6000611ea48261197b565b9050919050565b611eb481611e99565b82525050565b60006080820190508181036000830152611ed48187611e60565b90508181036020830152611ee881866116a9565b9050611ef760408301856119db565b611f046060830184611eab565b95945050505050565b600081519050611f1c81611a2f565b92915050565b600060208284031215611f3857611f37611742565b5b6000611f4684828501611f0d565b91505092915050565b7f4f6e6c79207468652044414f2063616e2076657269667920746865207461736b600082015250565b6000611f85602083611654565b9150611f9082611f4f565b602082019050919050565b60006020820190508181036000830152611fb481611f78565b9050919050565b7f4e6f20776f726b20686173206265656e207375626d6974746564207965740000600082015250565b6000611ff1601e83611654565b9150611ffc82611fbb565b602082019050919050565b6000602082019050818103600083015261202081611fe4565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b600061205d602083611654565b915061206882612027565b602082019050919050565b6000602082019050818103600083015261208c81612050565b9050919050565b7f416d6f756e742073656e74206d75737420626520657175616c20746f2074686560008201527f2072657761726400000000000000000000000000000000000000000000000000602082015250565b60006120ef602783611654565b91506120fa82612093565b604082019050919050565b6000602082019050818103600083015261211e816120e2565b9050919050565b7f4f6e6c792074686520656d706c6f7965652063616e2063616e63656c2074686560008201527f207461736b000000000000000000000000000000000000000000000000000000602082015250565b6000612181602583611654565b915061218c82612125565b604082019050919050565b600060208201905081810360008301526121b081612174565b9050919050565b7f5461736b2068617320616c7265616479206265656e20636f6d706c6574656400600082015250565b60006121ed601f83611654565b91506121f8826121b7565b602082019050919050565b6000602082019050818103600083015261221c816121e0565b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b600061227f602683611654565b915061228a82612223565b604082019050919050565b600060208201905081810360008301526122ae81612272565b905091905056fea2646970667358221220e2e5ab4105c682b1e8e756d911460f0c99b4c199f8721d7338b75b452c684e8964736f6c63430008080033",
  "deployedBytecode": "0x6080604052600436106101355760003560e01c80638da5cb5b116100ab578063b0afb95b1161006f578063b0afb95b146103be578063e27fbd27146103e9578063e73a914c14610405578063f2fde38b1461042e578063f7d9ae7314610457578063fbc03a1e1461046e57610135565b80638da5cb5b146102e75780639a82a09a146103125780639d9a7fe91461033d578063a0a1a7d714610368578063ae200e791461039357610135565b806338e40486116100fd57806338e4048614610211578063394c244b1461023a5780634162169f146102635780635472dbdc1461028e5780635c43ccaf146102a5578063715018a6146102d057610135565b80631c26d5cb1461013a578063228cb7331461016557806329dcb0cf146101905780632dfca445146101bb578063322e9f04146101e6575b600080fd5b34801561014657600080fd5b5061014f610499565b60405161015c91906116e2565b60405180910390f35b34801561017157600080fd5b5061017a61052b565b604051610187919061171d565b60405180910390f35b34801561019c57600080fd5b506101a5610531565b6040516101b2919061171d565b60405180910390f35b3480156101c757600080fd5b506101d0610537565b6040516101dd919061171d565b60405180910390f35b3480156101f257600080fd5b506101fb61053d565b60405161020891906116e2565b60405180910390f35b34801561021d57600080fd5b5061023860048036038101906102339190611784565b6105cb565b005b34801561024657600080fd5b50610261600480360381019061025c91906118e6565b6106f1565b005b34801561026f57600080fd5b50610278610aa8565b60405161028591906119ae565b60405180910390f35b34801561029a57600080fd5b506102a3610ace565b005b3480156102b157600080fd5b506102ba610dfd565b6040516102c791906116e2565b60405180910390f35b3480156102dc57600080fd5b506102e5610e8f565b005b3480156102f357600080fd5b506102fc610f17565b60405161030991906119ea565b60405180910390f35b34801561031e57600080fd5b50610327610f40565b6040516103349190611a14565b60405180910390f35b34801561034957600080fd5b50610352610f53565b60405161035f9190611a14565b60405180910390f35b34801561037457600080fd5b5061037d610f66565b60405161038a91906119ea565b60405180910390f35b34801561039f57600080fd5b506103a8610f8c565b6040516103b591906119ea565b60405180910390f35b3480156103ca57600080fd5b506103d3610fb2565b6040516103e091906116e2565b60405180910390f35b61040360048036038101906103fe9190611a5b565b611040565b005b34801561041157600080fd5b5061042c60048036038101906104279190611ae3565b6110a4565b005b34801561043a57600080fd5b5061045560048036038101906104509190611ae3565b611164565b005b34801561046357600080fd5b5061046c6111ec565b005b34801561047a57600080fd5b50610483611354565b60405161049091906116e2565b60405180910390f35b6060600780546104a890611b3f565b80601f01602080910402602001604051908101604052809291908181526020018280546104d490611b3f565b80156105215780601f106104f657610100808354040283529160200191610521565b820191906000526020600020905b81548152906001019060200180831161050457829003601f168201915b5050505050905090565b60035481565b60045481565b600a5481565b6007805461054a90611b3f565b80601f016020809104026020016040519081016040528092919081815260200182805461057690611b3f565b80156105c35780601f10610598576101008083540402835291602001916105c3565b820191906000526020600020905b8154815290600101906020018083116105a657829003601f168201915b505050505081565b600073ffffffffffffffffffffffffffffffffffffffff16600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141561065d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161065490611bbd565b60405180910390fd5b600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c9d27afe600a54836040518363ffffffff1660e01b81526004016106bc929190611bdd565b600060405180830381600087803b1580156106d657600080fd5b505af11580156106ea573d6000803e3d6000fd5b5050505050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610781576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161077890611c78565b60405180910390fd5b6004544211156107c6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107bd90611ce4565b60405180910390fd5b600660019054906101000a900460ff1615610816576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161080d90611d50565b60405180910390fd5b60006007805461082590611b3f565b905014610867576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161085e90611de2565b60405180910390fd5b806007908051906020019061087d9291906115a6565b5060006040516024016040516020818303038152906040527f5472dbdc000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050905060006040518060400160405280601681526020017f566572696679207461736b20636f6d706c6574696f6e0000000000000000000081525090506000600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663e1758bd86040518163ffffffff1660e01b815260040160206040518083038186803b1580156109a957600080fd5b505afa1580156109bd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109e19190611e17565b90506000309050600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166302063e82858584866040518563ffffffff1660e01b8152600401610a499493929190611eba565b602060405180830381600087803b158015610a6357600080fd5b505af1158015610a77573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a9b9190611f22565b600a819055505050505050565b600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610b5e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b5590611f9b565b60405180910390fd5b600060078054610b6d90611b3f565b905011610baf576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ba690612007565b60405180910390fd5b6000600190508015610d67576001600660006101000a81548160ff021916908315150217905550600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c9d27afe600a5460016040518363ffffffff1660e01b8152600401610c36929190611bdd565b600060405180830381600087803b158015610c5057600080fd5b505af1158015610c64573d6000803e3d6000fd5b50505050600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16630d61b519600a546040518263ffffffff1660e01b8152600401610cc5919061171d565b600060405180830381600087803b158015610cdf57600080fd5b505af1158015610cf3573d6000803e3d6000fd5b50505050600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc6003549081150290604051600060405180830381858888f19350505050158015610d61573d6000803e3d6000fd5b50610dfa565b600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c9d27afe600a5460006040518363ffffffff1660e01b8152600401610dc7929190611bdd565b600060405180830381600087803b158015610de157600080fd5b505af1158015610df5573d6000803e3d6000fd5b505050505b50565b606060088054610e0c90611b3f565b80601f0160208091040260200160405190810160405280929190818152602001828054610e3890611b3f565b8015610e855780601f10610e5a57610100808354040283529160200191610e85565b820191906000526020600020905b815481529060010190602001808311610e6857829003601f168201915b5050505050905090565b610e976113e2565b73ffffffffffffffffffffffffffffffffffffffff16610eb5610f17565b73ffffffffffffffffffffffffffffffffffffffff1614610f0b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f0290612073565b60405180910390fd5b610f1560006113ea565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600660019054906101000a900460ff1681565b600660009054906101000a900460ff1681565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60088054610fbf90611b3f565b80601f0160208091040260200160405190810160405280929190818152602001828054610feb90611b3f565b80156110385780601f1061100d57610100808354040283529160200191611038565b820191906000526020600020905b81548152906001019060200180831161101b57829003601f168201915b505050505081565b81600381905550806008908051906020019061105d9291906115a6565b508134146110a0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161109790612105565b60405180910390fd5b5050565b6110ac6113e2565b73ffffffffffffffffffffffffffffffffffffffff166110ca610f17565b73ffffffffffffffffffffffffffffffffffffffff1614611120576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161111790612073565b60405180910390fd5b80600960006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b61116c6113e2565b73ffffffffffffffffffffffffffffffffffffffff1661118a610f17565b73ffffffffffffffffffffffffffffffffffffffff16146111e0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111d790612073565b60405180910390fd5b6111e9816114ae565b50565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461127c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161127390612197565b60405180910390fd5b600660009054906101000a900460ff16156112cc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112c390612203565b60405180910390fd5b6001600660016101000a81548160ff021916908315150217905550600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc6003549081150290604051600060405180830381858888f19350505050158015611351573d6000803e3d6000fd5b50565b6005805461136190611b3f565b80601f016020809104026020016040519081016040528092919081815260200182805461138d90611b3f565b80156113da5780601f106113af576101008083540402835291602001916113da565b820191906000526020600020905b8154815290600101906020018083116113bd57829003601f168201915b505050505081565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6114b66113e2565b73ffffffffffffffffffffffffffffffffffffffff166114d4610f17565b73ffffffffffffffffffffffffffffffffffffffff161461152a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161152190612073565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561159a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161159190612295565b60405180910390fd5b6115a3816113ea565b50565b8280546115b290611b3f565b90600052602060002090601f0160209004810192826115d4576000855561161b565b82601f106115ed57805160ff191683800117855561161b565b8280016001018555821561161b579182015b8281111561161a5782518255916020019190600101906115ff565b5b509050611628919061162c565b5090565b5b8082111561164557600081600090555060010161162d565b5090565b600081519050919050565b600082825260208201905092915050565b60005b83811015611683578082015181840152602081019050611668565b83811115611692576000848401525b50505050565b6000601f19601f8301169050919050565b60006116b482611649565b6116be8185611654565b93506116ce818560208601611665565b6116d781611698565b840191505092915050565b600060208201905081810360008301526116fc81846116a9565b905092915050565b6000819050919050565b61171781611704565b82525050565b6000602082019050611732600083018461170e565b92915050565b6000604051905090565b600080fd5b600080fd5b60008115159050919050565b6117618161174c565b811461176c57600080fd5b50565b60008135905061177e81611758565b92915050565b60006020828403121561179a57611799611742565b5b60006117a88482850161176f565b91505092915050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6117f382611698565b810181811067ffffffffffffffff82111715611812576118116117bb565b5b80604052505050565b6000611825611738565b905061183182826117ea565b919050565b600067ffffffffffffffff821115611851576118506117bb565b5b61185a82611698565b9050602081019050919050565b82818337600083830152505050565b600061188961188484611836565b61181b565b9050828152602081018484840111156118a5576118a46117b6565b5b6118b0848285611867565b509392505050565b600082601f8301126118cd576118cc6117b1565b5b81356118dd848260208601611876565b91505092915050565b6000602082840312156118fc576118fb611742565b5b600082013567ffffffffffffffff81111561191a57611919611747565b5b611926848285016118b8565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600061197461196f61196a8461192f565b61194f565b61192f565b9050919050565b600061198682611959565b9050919050565b60006119988261197b565b9050919050565b6119a88161198d565b82525050565b60006020820190506119c3600083018461199f565b92915050565b60006119d48261192f565b9050919050565b6119e4816119c9565b82525050565b60006020820190506119ff60008301846119db565b92915050565b611a0e8161174c565b82525050565b6000602082019050611a296000830184611a05565b92915050565b611a3881611704565b8114611a4357600080fd5b50565b600081359050611a5581611a2f565b92915050565b60008060408385031215611a7257611a71611742565b5b6000611a8085828601611a46565b925050602083013567ffffffffffffffff811115611aa157611aa0611747565b5b611aad858286016118b8565b9150509250929050565b611ac0816119c9565b8114611acb57600080fd5b50565b600081359050611add81611ab7565b92915050565b600060208284031215611af957611af8611742565b5b6000611b0784828501611ace565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680611b5757607f821691505b60208210811415611b6b57611b6a611b10565b5b50919050565b7f44414f20686173206e6f74206265656e20736574000000000000000000000000600082015250565b6000611ba7601483611654565b9150611bb282611b71565b602082019050919050565b60006020820190508181036000830152611bd681611b9a565b9050919050565b6000604082019050611bf2600083018561170e565b611bff6020830184611a05565b9392505050565b7f4f6e6c792074686520656d706c6f7965652063616e20636f6d706c657465207460008201527f6865207461736b00000000000000000000000000000000000000000000000000602082015250565b6000611c62602783611654565b9150611c6d82611c06565b604082019050919050565b60006020820190508181036000830152611c9181611c55565b9050919050565b7f446561646c696e65206861732070617373656400000000000000000000000000600082015250565b6000611cce601383611654565b9150611cd982611c98565b602082019050919050565b60006020820190508181036000830152611cfd81611cc1565b9050919050565b7f5461736b20686173206265656e2063616e63656c6c6564000000000000000000600082015250565b6000611d3a601783611654565b9150611d4582611d04565b602082019050919050565b60006020820190508181036000830152611d6981611d2d565b9050919050565b7f5461736b20697320616c7265616479206d61726b656420617320636f6d706c6560008201527f7465640000000000000000000000000000000000000000000000000000000000602082015250565b6000611dcc602383611654565b9150611dd782611d70565b604082019050919050565b60006020820190508181036000830152611dfb81611dbf565b9050919050565b600081519050611e1181611ab7565b92915050565b600060208284031215611e2d57611e2c611742565b5b6000611e3b84828501611e02565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000611e6b82611e44565b611e758185611e4f565b9350611e85818560208601611665565b611e8e81611698565b840191505092915050565b6000611ea48261197b565b9050919050565b611eb481611e99565b82525050565b60006080820190508181036000830152611ed48187611e60565b90508181036020830152611ee881866116a9565b9050611ef760408301856119db565b611f046060830184611eab565b95945050505050565b600081519050611f1c81611a2f565b92915050565b600060208284031215611f3857611f37611742565b5b6000611f4684828501611f0d565b91505092915050565b7f4f6e6c79207468652044414f2063616e2076657269667920746865207461736b600082015250565b6000611f85602083611654565b9150611f9082611f4f565b602082019050919050565b60006020820190508181036000830152611fb481611f78565b9050919050565b7f4e6f20776f726b20686173206265656e207375626d6974746564207965740000600082015250565b6000611ff1601e83611654565b9150611ffc82611fbb565b602082019050919050565b6000602082019050818103600083015261202081611fe4565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b600061205d602083611654565b915061206882612027565b602082019050919050565b6000602082019050818103600083015261208c81612050565b9050919050565b7f416d6f756e742073656e74206d75737420626520657175616c20746f2074686560008201527f2072657761726400000000000000000000000000000000000000000000000000602082015250565b60006120ef602783611654565b91506120fa82612093565b604082019050919050565b6000602082019050818103600083015261211e816120e2565b9050919050565b7f4f6e6c792074686520656d706c6f7965652063616e2063616e63656c2074686560008201527f207461736b000000000000000000000000000000000000000000000000000000602082015250565b6000612181602583611654565b915061218c82612125565b604082019050919050565b600060208201905081810360008301526121b081612174565b9050919050565b7f5461736b2068617320616c7265616479206265656e20636f6d706c6574656400600082015250565b60006121ed601f83611654565b91506121f8826121b7565b602082019050919050565b6000602082019050818103600083015261221c816121e0565b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b600061227f602683611654565b915061228a82612223565b604082019050919050565b600060208201905081810360008301526122ae81612272565b905091905056fea2646970667358221220e2e5ab4105c682b1e8e756d911460f0c99b4c199f8721d7338b75b452c684e8964736f6c63430008080033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 7,
        "contract": "contracts/dao.sol:WorkValidation",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 244,
        "contract": "contracts/dao.sol:WorkValidation",
        "label": "employer",
        "offset": 0,
        "slot": "1",
        "type": "t_address"
      },
      {
        "astId": 246,
        "contract": "contracts/dao.sol:WorkValidation",
        "label": "employee",
        "offset": 0,
        "slot": "2",
        "type": "t_address"
      },
      {
        "astId": 248,
        "contract": "contracts/dao.sol:WorkValidation",
        "label": "reward",
        "offset": 0,
        "slot": "3",
        "type": "t_uint256"
      },
      {
        "astId": 250,
        "contract": "contracts/dao.sol:WorkValidation",
        "label": "deadline",
        "offset": 0,
        "slot": "4",
        "type": "t_uint256"
      },
      {
        "astId": 252,
        "contract": "contracts/dao.sol:WorkValidation",
        "label": "taskDescription",
        "offset": 0,
        "slot": "5",
        "type": "t_string_storage"
      },
      {
        "astId": 254,
        "contract": "contracts/dao.sol:WorkValidation",
        "label": "completed",
        "offset": 0,
        "slot": "6",
        "type": "t_bool"
      },
      {
        "astId": 256,
        "contract": "contracts/dao.sol:WorkValidation",
        "label": "cancelled",
        "offset": 1,
        "slot": "6",
        "type": "t_bool"
      },
      {
        "astId": 258,
        "contract": "contracts/dao.sol:WorkValidation",
        "label": "work",
        "offset": 0,
        "slot": "7",
        "type": "t_string_storage"
      },
      {
        "astId": 260,
        "contract": "contracts/dao.sol:WorkValidation",
        "label": "criteria",
        "offset": 0,
        "slot": "8",
        "type": "t_string_storage"
      },
      {
        "astId": 263,
        "contract": "contracts/dao.sol:WorkValidation",
        "label": "dao",
        "offset": 0,
        "slot": "9",
        "type": "t_contract(DAO)240"
      },
      {
        "astId": 265,
        "contract": "contracts/dao.sol:WorkValidation",
        "label": "proposalId",
        "offset": 0,
        "slot": "10",
        "type": "t_uint256"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_contract(DAO)240": {
        "encoding": "inplace",
        "label": "contract DAO",
        "numberOfBytes": "20"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}